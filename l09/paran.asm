.ORIG x3000

LEA R6, STACK_BOT
LEA R1, TGTSTRING

LOOPTOP
LDR R0, R1, #0
BRz LOOPBOT
LD R2, NEGOPEN
ADD R2, R2, R0
BRz HANDLEOPEN
LD R2, NEGCLOSE
ADD R2, R2, R0
BRz HANDLECLOSE
DONEHANDLE
ADD R1, R1, #1
BRnzp LOOPTOP

HANDLEOPEN
JSR PUSH
BRnzp DONEHANDLE

HANDLECLOSE
JSR POP
ADD R5, R5, #0
BRp FAILED
BRnzp DONEHANDLE

LOOPBOT
JSR POP
ADD R5, R5, #0
BRz FAILED

SUCCESS

HALT


FAILED
LEA R0, FAILSTRING
PUTS
HALT

FAILSTRING .STRINGZ "Parens did not match"
TGTSTRING .STRINGZ "(())()"
NEGOPEN   .FILL xFFD8
NEGCLOSE  .FILL xFFD7

; PUSH
; input: R0 (value)
; output: R5 (0 success 1 failure)
PUSH
; R3: stack-end
; R6: stack-top

ST R3, STACK_R3_SAVE
LEA R3, STACK_TOP
NOT R3, R3
ADD R3, R3, #1
ADD R3, R6, R3
BRnz PUSH_NO_SPACE
ADD R6, R6, #-1
STR R0, R6, #0
AND R5, R5, #0
PUSH_RESTORE_RET
LD R3, STACK_R3_SAVE
RET
PUSH_NO_SPACE
AND R5, R5, #0
ADD R5, R5, #1
BRnzp PUSH_RESTORE_RET

; POP
; output: R0
; output: R5 (0 success 1 failure)
; R3: stack-start
; R6: stack-current
POP
ST R3, STACK_R3_SAVE
LEA R3, STACK_BOT
NOT R3, R3
ADD R3, R3, #1
ADD R3, R6, R3
BRzp POP_EMPTY
LDR R0, R6, #0
ADD R6, R6, #1
AND R5, R5, #0
POP_RESTORE_RET
LD R3, STACK_R3_SAVE
RET
POP_EMPTY
AND R5, R5, #0
ADD R5, R5, #1
BRnzp POP_RESTORE_RET

STACK_R3_SAVE .FILL #0

STACK_TOP .FILL x0000
.BLKW x20
STACK_BOT .FILL x0000
	
.END
